import json
import os

# Define the Contact class
class Contact:
    def __init__(self, name, phone, email):
        self.name = name
        self.phone = phone
        self.email = email

    def to_dict(self):
        return {
            'name': self.name,
            'phone': self.phone,
            'email': self.email
        }

# Load contacts from file
def load_contacts(file_name='contacts.json'):
    if os.path.exists(file_name):
        with open(file_name, 'r') as file:
            return [Contact(**contact) for contact in json.load(file)]
    return []

# Save contacts to file
def save_contacts(contacts, file_name='contacts.json'):
    with open(file_name, 'w') as file:
        json.dump([contact.to_dict() for contact in contacts], file)

# Add a new contact
def add_contact(contacts):
    name = input("Enter name: ")
    phone = input("Enter phone number: ")
    email = input("Enter email address: ")
    contacts.append(Contact(name, phone, email))
    save_contacts(contacts)
    print("Contact added successfully.")

# View all contacts
def view_contacts(contacts):
    if not contacts:
        print("No contacts found.")
    else:
        for idx, contact in enumerate(contacts, start=1):
            print(f"{idx}. Name: {contact.name}, Phone: {contact.phone}, Email: {contact.email}")

# Edit an existing contact
def edit_contact(contacts):
    view_contacts(contacts)
    idx = int(input("Enter the contact number to edit: ")) - 1
    if 0 <= idx < len(contacts):
        contacts[idx].name = input(f"Enter new name ({contacts[idx].name}): ") or contacts[idx].name
        contacts[idx].phone = input(f"Enter new phone number ({contacts[idx].phone}): ") or contacts[idx].phone
        contacts[idx].email = input(f"Enter new email address ({contacts[idx].email}): ") or contacts[idx].email
        save_contacts(contacts)
        print("Contact updated successfully.")
    else:
        print("Invalid contact number.")

# Delete a contact
def delete_contact(contacts):
    view_contacts(contacts)
    idx = int(input("Enter the contact number to delete: ")) - 1
    if 0 <= idx < len(contacts):
        contacts.pop(idx)
        save_contacts(contacts)
        print("Contact deleted successfully.")
    else:
        print("Invalid contact number.")

# Main program loop
def main():
    contacts = load_contacts()
    while True:
        print("\nContact Management System")
        print("1. Add Contact")
        print("2. View Contacts")
        print("3. Edit Contact")
        print("4. Delete Contact")
        print("5. Exit")
        choice = input("Enter your choice: ")

        if choice == '1':
            add_contact(contacts)
        elif choice == '2':
            view_contacts(contacts)
        elif choice == '3':
            edit_contact(contacts)
        elif choice == '4':
            delete_contact(contacts)
        elif choice == '5':
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
